name: testsuite

on:
  push:
    branches:
      - "**"
    tags-ignore:
      - "*"
  pull_request:
  workflow_dispatch:

# I don't think that we can (safely) set TEST_JOBS=2 in the global environment,
# because on Win32 the various Makefile's `test` target is actually ./harness,
# and it would (attempt to) honour the $ENV{TEST_JOBS} setting. This won't end
# nicely as unlike BSD (etc), Win32 sockets can drop data at process exit, which
# would cause missing TAP and hence spurious test failures.

env:
  PERL_SKIP_TTY_TEST: 1
  CONTINUOUS_INTEGRATION: 1
  LSAN_OPTIONS: "verbosity=1:log_threads=1:log_pointers=1"
  
jobs:

  #     _    ____    _    _   _
  #    / \  / ___|  / \  | \ | |
  #   / _ \ \___ \ / _ \ |  \| |
  #  / ___ \ ___) / ___ \| |\  |
  # /_/   \_\____/_/   \_\_| \_|

  # Life is pain, highness. Anyone who says differently is selling something.

  ASAN:
    name: "ASAN"
    runs-on: ubuntu-latest
    timeout-minutes: 120

    strategy:
      matrix:
        # -DPURIFY disables arenas and mallocs everything individually. With
        # ASAN or similar it's the real torture test. However, we also need to
        # test that the arena code doesn't have any goofs.
        CONFIGURE_ARGS:
          - "-Accflags=-DPURIFY"
          - "-DDEBUGGING"
          - "-Dusethreads"

    steps:
      - name: Install System dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgdbm-dev libdb-dev
      - uses: actions/checkout@v2
      - name: git cfg + fetch tags
        run: |
          git config diff.renameLimit 999999
          git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      - name: Configure
        run: |
          ./Configure -des -Dusedevel -Dcc="clang -fsanitize=address" -Dld="clang -fsanitize=address" ${{ matrix.CONFIGURE_ARGS }} -Dprefix="$HOME/perl-blead"
      - name: Build
        run: |
          PERL_DESTRUCT_LEVEL=2 make -j2 test_prep
      - name: Show Config
        run: |
          ASAN_OPTIONS=detect_leaks=0 ./perl -Ilib -V
          ASAN_OPTIONS=detect_leaks=0 ./perl -Ilib -e 'use Config; print Config::config_sh'
      - name: Run Tests
        run: |
          PERL_DESTRUCT_LEVEL=2 TEST_JOBS=1 ./perl t/harness -v ext/GDBM_File/t/*.t cpan/Memoize/t/errors.t

